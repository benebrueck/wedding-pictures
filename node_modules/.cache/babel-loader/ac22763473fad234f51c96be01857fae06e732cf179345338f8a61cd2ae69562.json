{"ast":null,"code":"/**\n * @license Copyright (c) 2013, CKSource - Frederico Knabben\n * For licensing, see LICENSE\n */\n\n\"use strict\";\n\nvar flowInspector = require(\"flow-inspector\"),\n  p = require(\"path\"),\n  FileSystemStrategy,\n  // constructor, function\n  Task = flowInspector.Task,\n  TaskAggregator = flowInspector.TaskAggregator;\n\n/**\n * @abstract\n * @constructor\n */\nFileSystemStrategy = function () {};\n\n/**\n * @callback JsLoader/FileSystem/FileSystemStrategy~existsCallback\n * @param {bool} exists\n * @return {void}\n */\n\n/**\n * @abstract\n * @param {string} path\n * @param {JsLoader/FileSystem/FileSystemStrategy~existsCallback} callback\n * @return {void}\n * @throws {Error}\n */\nFileSystemStrategy.prototype.exists = function (path, callback) {\n  throw new Error(\"This method must be implemented in child object.\");\n};\n\n/**\n * @callback JsLoader/FileSystem/FileSystemStrategy~hasDirDirCallback\n * @param {bool} has\n * @param {object|void} err\n * @return {void}\n */\n\n/**\n * @param {string} directory\n * @param {string} innerDirectory relative to directory\n * @param {JsLoader/FileSystem/FileSystemStrategy~hasDirDirCallback} callback\n * @return {void}\n */\nFileSystemStrategy.prototype.hasDirDir = function (directory, innerDirectory, callback) {\n  var that = this;\n  this.hasDirPath(directory, innerDirectory, function (exists, err) {\n    if (exists) {\n      that.isDirectory(p.resolve(directory, innerDirectory), function (isDirectory, err) {\n        callback(isDirectory, err);\n      });\n    } else {\n      callback(exists, err);\n    }\n  });\n};\n\n/**\n * @callback JsLoader/FileSystem/FileSystemStrategy~hasDirFileCallback\n * @param {bool} has\n * @param {object|void} err\n * @return {void}\n */\n\n/**\n * @param {string} directory\n * @param {string} file\n * @param {JsLoader/FileSystem/FileSystemStrategy~hasDirFileCallback} callback\n * @return {void}\n */\nFileSystemStrategy.prototype.hasDirFile = function (directory, file, callback) {\n  var that = this;\n  this.hasDirPath(directory, file, function (exists, err) {\n    if (exists) {\n      that.isFile(p.resolve(directory, file), function (isFile, err) {\n        callback(isFile, err);\n      });\n    } else {\n      callback(exists, err);\n    }\n  });\n};\n\n/**\n * @callback JsLoader/FileSystem/FileSystemStrategy~hasDirPathCallback\n * @param {bool} has\n * @param {object|void} err\n * @return {void}\n */\n\n/**\n * @param {string} directory\n * @param {string} path\n * @param {JsLoader/FileSystem/FileSystemStrategy~hasDirPathCallback} callback\n * @return {void}\n * @throws {Error} if given path is not a directory\n */\nFileSystemStrategy.prototype.hasDirPath = function (directory, path, callback) {\n  var that = this;\n  this.isDirectory(directory, function (isDirectory, err) {\n    if (!err && !isDirectory) {\n      err = new Error(\"Given path is not a directory: \" + directory);\n    }\n    if (err) {\n      return void callback(false, err);\n    }\n    that.exists(p.resolve(directory, path), function (exists) {\n      callback(exists, err);\n    });\n  });\n};\n\n/**\n * @callback JsLoader/FileSystem/FileSystemStrategy~isDirectoryCallback\n * @param {bool} isDirectory\n * @param {object|void} err\n * @return {void}\n */\n\n/**\n * @param {string} path\n * @param {JsLoader/FileSystem/FileSystemStrategy~isDirectoryCallback} callback\n * @return {void}\n */\nFileSystemStrategy.prototype.isDirectory = function (path, callback) {\n  this.stat(path, function (stat, err) {\n    var isDirectory;\n    if (err) {\n      isDirectory = false;\n    } else {\n      isDirectory = stat.isDirectory();\n    }\n    callback(isDirectory, err);\n  });\n};\n\n/**\n * @callback JsLoader/FileSystem/FileSystemStrategy~isFileCallback\n * @param {bool} isFile\n * @param {object|void} err\n * @return {void}\n */\n\n/**\n * @param {string} path\n * @param {JsLoader/FileSystem/FileSystemStrategy~isFileCallback} callback\n * @return {void}\n */\nFileSystemStrategy.prototype.isFile = function (path, callback) {\n  this.stat(path, function (stat, err) {\n    var isFile;\n    if (err) {\n      isFile = false;\n    } else {\n      isFile = stat.isFile();\n    }\n    callback(isFile, err);\n  });\n};\n\n/**\n * @callback JsLoader/FileSystem/FileSystemStrategy~readDirCallback\n * @param {array} files\n * @param {object|void} err\n * @return {void}\n */\n\n/**\n * @abstract\n * @param {string} path\n * @param {JsLoader/FileSystem/FileSystemStrategy~readDirCallback} callback\n * @return {void}\n * @throws {Error}\n */\nFileSystemStrategy.prototype.readDir = function (path, callback) {\n  throw new Error(\"This method must be implemented in child object.\");\n};\n\n/**\n * @callback JsLoader/FileSystem/FileSystemStrategy~readDirsCallback\n * @param {array} files\n * @param {object|void} err\n * @return {void}\n */\n\n/**\n * @param {array} paths\n * @param {JsLoader/FileSystem/FileSystemStrategy~readDirsCallback} callback\n * @return {void}\n * @throws {Error}\n */\nFileSystemStrategy.prototype.readDirs = function (paths, callback) {\n  var i,\n    readTask,\n    readTaskAggregator = new TaskAggregator(),\n    ret = {},\n    onDirectoryRead;\n  onDirectoryRead = function (readTask, path, files, err) {\n    if (err) {\n      return void readTask.fail();\n    }\n    ret[path] = files;\n    readTask.done();\n  };\n  for (i = 0; i < paths.length; i += 1) {\n    readTask = new Task();\n    readTask.start();\n    readTaskAggregator.add(readTask);\n    this.readDir(paths[i], onDirectoryRead.bind(null, readTask, paths[i]));\n  }\n  if (readTaskAggregator.isEveryStopped()) {\n    callback(ret);\n  } else {\n    readTaskAggregator.addListenerEveryStop(function (evt) {\n      callback(ret);\n    });\n  }\n};\n\n/**\n * @callback JsLoader/FileSystem/FileSystemStrategy~readFileCallback\n * @param {string} content\n * @param {object|void} err\n * @return {void}\n */\n\n/**\n * @abstract\n * @param {string} path\n * @param {JsLoader/FileSystem/FileSystemStrategy~readFileCallback} callback\n * @return {void}\n * @throws {Error}\n */\nFileSystemStrategy.prototype.readFile = function (path, callback) {\n  throw new Error(\"This method must be implemented in child object.\");\n};\n\n/**\n * @callback JsLoader/FileSystem/FileSystemStrategy~realpathCallback\n * @param {string} realpath\n * @param {object|void} err\n * @return {void}\n */\n\n/**\n * @abstract\n * @param {string} path\n * @param {JsLoader/FileSystem/FileSystemStrategy~realpathCallback} callback\n * @return {void}\n * @throws {Error}\n */\nFileSystemStrategy.prototype.realpath = function (path, callback) {\n  throw new Error(\"This method must be implemented in child object.\");\n};\n\n/**\n * @callback JsLoader/FileSystem/FileSystemStrategy~statCallback\n * @param {fs.Stats} stat or any object compatible with fs.Stats by duck typing\n * @param {object|void} err\n * @return {void}\n */\n\n/**\n * @abstract\n * @param {string} path\n * @param {JsLoader/FileSystem/FileSystemStrategy~statCallback} callback\n * @return {void}\n * @throws {Error}\n */\nFileSystemStrategy.prototype.stat = function (path, callback) {\n  throw new Error(\"This method must be implemented in child object.\");\n};\n\n/**\n * @callback JsLoader/FileSystem/FileSystemStrategy~statPathsCallback\n * @param {array} files\n * @param {object|void} err\n * @return {void}\n */\n\n/**\n * @param {array} paths\n * @param {JsLoader/FileSystem/FileSystemStrategy~statPathsCallback} callback\n * @return {void}\n * @throws {Error}\n */\nFileSystemStrategy.prototype.statPaths = function (paths, callback) {\n  var i,\n    statTask,\n    statTaskAggregator = new TaskAggregator(),\n    ret = {},\n    onPathStat;\n  onPathStat = function (statTask, path, stat, err) {\n    if (err) {\n      return void statTask.fail();\n    }\n    ret[path] = stat;\n    statTask.done();\n  };\n  for (i = 0; i < paths.length; i += 1) {\n    statTask = new Task();\n    statTask.start();\n    statTaskAggregator.add(statTask);\n    this.stat(paths[i], onPathStat.bind(null, statTask, paths[i]));\n  }\n  if (statTaskAggregator.isEveryStopped()) {\n    callback(ret);\n  } else {\n    statTaskAggregator.addListenerEveryStop(function (evt) {\n      callback(ret);\n    });\n  }\n};\nmodule.exports = FileSystemStrategy;","map":{"version":3,"names":["flowInspector","require","p","FileSystemStrategy","Task","TaskAggregator","prototype","exists","path","callback","Error","hasDirDir","directory","innerDirectory","that","hasDirPath","err","isDirectory","resolve","hasDirFile","file","isFile","stat","readDir","readDirs","paths","i","readTask","readTaskAggregator","ret","onDirectoryRead","files","fail","done","length","start","add","bind","isEveryStopped","addListenerEveryStop","evt","readFile","realpath","statPaths","statTask","statTaskAggregator","onPathStat","module","exports"],"sources":["/Users/benediktbrueck/Documents/Programmieren/wedding/wedding-pictures/node_modules/filesystem/libraries/scripts/JsLoader/FileSystem/FileSystemStrategy.js"],"sourcesContent":["/**\n * @license Copyright (c) 2013, CKSource - Frederico Knabben\n * For licensing, see LICENSE\n */\n\n\"use strict\";\n\nvar flowInspector = require(\"flow-inspector\"),\n    p = require(\"path\"),\n    FileSystemStrategy, // constructor, function\n    Task = flowInspector.Task,\n    TaskAggregator = flowInspector.TaskAggregator;\n\n/**\n * @abstract\n * @constructor\n */\nFileSystemStrategy = function () {};\n\n/**\n * @callback JsLoader/FileSystem/FileSystemStrategy~existsCallback\n * @param {bool} exists\n * @return {void}\n */\n\n/**\n * @abstract\n * @param {string} path\n * @param {JsLoader/FileSystem/FileSystemStrategy~existsCallback} callback\n * @return {void}\n * @throws {Error}\n */\nFileSystemStrategy.prototype.exists = function (path, callback) {\n    throw new Error(\"This method must be implemented in child object.\");\n};\n\n/**\n * @callback JsLoader/FileSystem/FileSystemStrategy~hasDirDirCallback\n * @param {bool} has\n * @param {object|void} err\n * @return {void}\n */\n\n/**\n * @param {string} directory\n * @param {string} innerDirectory relative to directory\n * @param {JsLoader/FileSystem/FileSystemStrategy~hasDirDirCallback} callback\n * @return {void}\n */\nFileSystemStrategy.prototype.hasDirDir = function (directory, innerDirectory, callback) {\n    var that = this;\n\n    this.hasDirPath(directory, innerDirectory, function (exists, err) {\n        if (exists) {\n            that.isDirectory(p.resolve(directory, innerDirectory), function (isDirectory, err) {\n                callback(isDirectory, err);\n            });\n        } else {\n            callback(exists, err);\n        }\n    });\n};\n\n/**\n * @callback JsLoader/FileSystem/FileSystemStrategy~hasDirFileCallback\n * @param {bool} has\n * @param {object|void} err\n * @return {void}\n */\n\n/**\n * @param {string} directory\n * @param {string} file\n * @param {JsLoader/FileSystem/FileSystemStrategy~hasDirFileCallback} callback\n * @return {void}\n */\nFileSystemStrategy.prototype.hasDirFile = function (directory, file, callback) {\n    var that = this;\n\n    this.hasDirPath(directory, file, function (exists, err) {\n        if (exists) {\n            that.isFile(p.resolve(directory, file), function (isFile, err) {\n                callback(isFile, err);\n            });\n        } else {\n            callback(exists, err);\n        }\n    });\n};\n\n/**\n * @callback JsLoader/FileSystem/FileSystemStrategy~hasDirPathCallback\n * @param {bool} has\n * @param {object|void} err\n * @return {void}\n */\n\n/**\n * @param {string} directory\n * @param {string} path\n * @param {JsLoader/FileSystem/FileSystemStrategy~hasDirPathCallback} callback\n * @return {void}\n * @throws {Error} if given path is not a directory\n */\nFileSystemStrategy.prototype.hasDirPath = function (directory, path, callback) {\n    var that = this;\n\n    this.isDirectory(directory, function (isDirectory, err) {\n        if (!err && !isDirectory) {\n            err = new Error(\"Given path is not a directory: \" + directory);\n        }\n\n        if (err) {\n            return void callback(false, err);\n        }\n\n        that.exists(p.resolve(directory, path), function (exists) {\n            callback(exists, err);\n        });\n    });\n};\n\n/**\n * @callback JsLoader/FileSystem/FileSystemStrategy~isDirectoryCallback\n * @param {bool} isDirectory\n * @param {object|void} err\n * @return {void}\n */\n\n/**\n * @param {string} path\n * @param {JsLoader/FileSystem/FileSystemStrategy~isDirectoryCallback} callback\n * @return {void}\n */\nFileSystemStrategy.prototype.isDirectory = function (path, callback) {\n    this.stat(path, function (stat, err) {\n        var isDirectory;\n\n        if (err) {\n            isDirectory = false;\n        } else {\n            isDirectory = stat.isDirectory();\n        }\n\n        callback(isDirectory, err);\n    });\n};\n\n/**\n * @callback JsLoader/FileSystem/FileSystemStrategy~isFileCallback\n * @param {bool} isFile\n * @param {object|void} err\n * @return {void}\n */\n\n/**\n * @param {string} path\n * @param {JsLoader/FileSystem/FileSystemStrategy~isFileCallback} callback\n * @return {void}\n */\nFileSystemStrategy.prototype.isFile = function (path, callback) {\n    this.stat(path, function (stat, err) {\n        var isFile;\n\n        if (err) {\n            isFile = false;\n        } else {\n            isFile = stat.isFile();\n        }\n\n        callback(isFile, err);\n    });\n};\n\n/**\n * @callback JsLoader/FileSystem/FileSystemStrategy~readDirCallback\n * @param {array} files\n * @param {object|void} err\n * @return {void}\n */\n\n/**\n * @abstract\n * @param {string} path\n * @param {JsLoader/FileSystem/FileSystemStrategy~readDirCallback} callback\n * @return {void}\n * @throws {Error}\n */\nFileSystemStrategy.prototype.readDir = function (path, callback) {\n    throw new Error(\"This method must be implemented in child object.\");\n};\n\n/**\n * @callback JsLoader/FileSystem/FileSystemStrategy~readDirsCallback\n * @param {array} files\n * @param {object|void} err\n * @return {void}\n */\n\n/**\n * @param {array} paths\n * @param {JsLoader/FileSystem/FileSystemStrategy~readDirsCallback} callback\n * @return {void}\n * @throws {Error}\n */\nFileSystemStrategy.prototype.readDirs = function (paths, callback) {\n    var i,\n        readTask,\n        readTaskAggregator = new TaskAggregator(),\n        ret = {},\n        onDirectoryRead;\n\n    onDirectoryRead = function (readTask, path, files, err) {\n        if (err) {\n            return void readTask.fail();\n        }\n\n        ret[path] = files;\n        readTask.done();\n    };\n\n    for (i = 0; i < paths.length; i += 1) {\n        readTask = new Task();\n        readTask.start();\n\n        readTaskAggregator.add(readTask);\n        this.readDir(paths[i], onDirectoryRead.bind(null, readTask, paths[i]));\n    }\n\n    if (readTaskAggregator.isEveryStopped()) {\n        callback(ret);\n    } else {\n        readTaskAggregator.addListenerEveryStop(function (evt) {\n            callback(ret);\n        });\n    }\n};\n\n/**\n * @callback JsLoader/FileSystem/FileSystemStrategy~readFileCallback\n * @param {string} content\n * @param {object|void} err\n * @return {void}\n */\n\n/**\n * @abstract\n * @param {string} path\n * @param {JsLoader/FileSystem/FileSystemStrategy~readFileCallback} callback\n * @return {void}\n * @throws {Error}\n */\nFileSystemStrategy.prototype.readFile = function (path, callback) {\n    throw new Error(\"This method must be implemented in child object.\");\n};\n\n/**\n * @callback JsLoader/FileSystem/FileSystemStrategy~realpathCallback\n * @param {string} realpath\n * @param {object|void} err\n * @return {void}\n */\n\n/**\n * @abstract\n * @param {string} path\n * @param {JsLoader/FileSystem/FileSystemStrategy~realpathCallback} callback\n * @return {void}\n * @throws {Error}\n */\nFileSystemStrategy.prototype.realpath = function (path, callback) {\n    throw new Error(\"This method must be implemented in child object.\");\n};\n\n/**\n * @callback JsLoader/FileSystem/FileSystemStrategy~statCallback\n * @param {fs.Stats} stat or any object compatible with fs.Stats by duck typing\n * @param {object|void} err\n * @return {void}\n */\n\n/**\n * @abstract\n * @param {string} path\n * @param {JsLoader/FileSystem/FileSystemStrategy~statCallback} callback\n * @return {void}\n * @throws {Error}\n */\nFileSystemStrategy.prototype.stat = function (path, callback) {\n    throw new Error(\"This method must be implemented in child object.\");\n};\n\n/**\n * @callback JsLoader/FileSystem/FileSystemStrategy~statPathsCallback\n * @param {array} files\n * @param {object|void} err\n * @return {void}\n */\n\n/**\n * @param {array} paths\n * @param {JsLoader/FileSystem/FileSystemStrategy~statPathsCallback} callback\n * @return {void}\n * @throws {Error}\n */\nFileSystemStrategy.prototype.statPaths = function (paths, callback) {\n    var i,\n        statTask,\n        statTaskAggregator = new TaskAggregator(),\n        ret = {},\n        onPathStat;\n\n    onPathStat = function (statTask, path, stat, err) {\n        if (err) {\n            return void statTask.fail();\n        }\n\n        ret[path] = stat;\n        statTask.done();\n    };\n\n    for (i = 0; i < paths.length; i += 1) {\n        statTask = new Task();\n        statTask.start();\n\n        statTaskAggregator.add(statTask);\n        this.stat(paths[i], onPathStat.bind(null, statTask, paths[i]));\n    }\n\n    if (statTaskAggregator.isEveryStopped()) {\n        callback(ret);\n    } else {\n        statTaskAggregator.addListenerEveryStop(function (evt) {\n            callback(ret);\n        });\n    }\n};\n\nmodule.exports = FileSystemStrategy;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}