{"ast":null,"code":"/**\n * @license Copyright (c) 2013, CKSource - Frederico Knabben\n * For licensing, see LICENSE\n */\n\n\"use strict\";\n\nvar Pattern,\n  // constructor, function\n  ScanningStrategy = require(__dirname + \"/../ScanningStrategy\"),\n  // constructor, function\n  p = require(\"path\"),\n  testPattern; // private, function\n\n/**\n * @access private\n * @param {JsLoader/FileSystem/ScanningStrategy/Pattern} patternScanningStrategy\n * @param {string} input\n * @return {bool}\n * @this JsLoader/FileSystem/ScanningStrategy/Pattern\n */\ntestPattern = function (patternScanningStrategy, input) {\n  var pattern = patternScanningStrategy.pattern;\n  if (pattern instanceof RegExp) {\n    return pattern.test(input);\n  } else {\n    return pattern === input;\n  }\n};\n\n/**\n * @abstract\n * @auguments JsLoader/FileSystem/ScanningStrategy\n * @constructor\n * @param {RegExp|String} pattern\n */\nPattern = function (pattern) {\n  ScanningStrategy.call(this);\n  Object.defineProperty(this, \"pattern\", {\n    /**\n     * @return {mixed} pattern\n     */\n    get: function () {\n      return pattern;\n    },\n    /**\n     * @param {mixed} item\n     * @return {void}\n     * @throws {Error} if directory name pattern is not supported\n     */\n    set: function (item) {\n      if (!this.isNamePatternSupported(item)) {\n        throw new Error(\"Given directory name pattern is not supported.\");\n      }\n      pattern = item;\n    }\n  });\n  this.pattern = pattern;\n};\nPattern.prototype = Object.create(ScanningStrategy.prototype);\n\n/**\n * @param {string} path\n * @param {JsLoader/FileSystem/FileSystemStrategy} fileSystemStrategy\n * @param {JsLoader/FileSystem/ScanningStrategy~checkDirectoryCallback} callback\n * @return {void}\n */\nPattern.prototype.checkDirectory = function (path, fileSystemStrategy, callback) {\n  var basename, resolvedPath;\n  resolvedPath = p.resolve(path);\n  basename = p.basename(resolvedPath);\n  callback(testPattern(this, basename));\n};\n\n/**\n * @param {string} path\n * @param {JsLoader/FileSystem/FileSystemStrategy} fileSystemStrategy\n * @param {JsLoader/FileSystem/ScanningStrategy~checkFileCallback} callback\n * @return {void}\n */\nPattern.prototype.checkFile = function (path, fileSystemStrategy, callback) {\n  var basename, resolvedPath;\n  resolvedPath = p.resolve(path);\n  basename = p.basename(resolvedPath);\n  callback(testPattern(this, basename));\n};\n\n/**\n * @abstract\n * @param {mixed} pattern\n * @return {bool}\n */\nPattern.prototype.isNamePatternSupported = function (pattern) {\n  return \"string\" === typeof pattern || pattern instanceof RegExp;\n};\nmodule.exports = Pattern;","map":{"version":3,"names":["Pattern","ScanningStrategy","require","__dirname","p","testPattern","patternScanningStrategy","input","pattern","RegExp","test","call","Object","defineProperty","get","set","item","isNamePatternSupported","Error","prototype","create","checkDirectory","path","fileSystemStrategy","callback","basename","resolvedPath","resolve","checkFile","module","exports"],"sources":["/Users/benediktbrueck/Documents/Programmieren/wedding/wedding-pictures/node_modules/filesystem/libraries/scripts/JsLoader/FileSystem/ScanningStrategy/Pattern.js"],"sourcesContent":["/**\n * @license Copyright (c) 2013, CKSource - Frederico Knabben\n * For licensing, see LICENSE\n */\n\n\"use strict\";\n\nvar Pattern, // constructor, function\n    ScanningStrategy = require(__dirname + \"/../ScanningStrategy\"), // constructor, function\n    p = require(\"path\"),\n    testPattern; // private, function\n\n/**\n * @access private\n * @param {JsLoader/FileSystem/ScanningStrategy/Pattern} patternScanningStrategy\n * @param {string} input\n * @return {bool}\n * @this JsLoader/FileSystem/ScanningStrategy/Pattern\n */\ntestPattern = function (patternScanningStrategy, input) {\n    var pattern = patternScanningStrategy.pattern;\n\n    if (pattern instanceof RegExp) {\n        return pattern.test(input);\n    } else {\n        return pattern === input;\n    }\n};\n\n/**\n * @abstract\n * @auguments JsLoader/FileSystem/ScanningStrategy\n * @constructor\n * @param {RegExp|String} pattern\n */\nPattern = function (pattern) {\n    ScanningStrategy.call(this);\n\n    Object.defineProperty(this, \"pattern\", {\n\n        /**\n         * @return {mixed} pattern\n         */\n        get: function () {\n            return pattern;\n        },\n\n        /**\n         * @param {mixed} item\n         * @return {void}\n         * @throws {Error} if directory name pattern is not supported\n         */\n        set: function (item) {\n            if (!this.isNamePatternSupported(item)) {\n                throw new Error(\"Given directory name pattern is not supported.\");\n            }\n\n            pattern = item;\n        }\n\n    });\n\n    this.pattern = pattern;\n};\nPattern.prototype = Object.create(ScanningStrategy.prototype);\n\n/**\n * @param {string} path\n * @param {JsLoader/FileSystem/FileSystemStrategy} fileSystemStrategy\n * @param {JsLoader/FileSystem/ScanningStrategy~checkDirectoryCallback} callback\n * @return {void}\n */\nPattern.prototype.checkDirectory = function (path, fileSystemStrategy, callback) {\n    var basename,\n        resolvedPath;\n\n    resolvedPath = p.resolve(path);\n    basename = p.basename(resolvedPath);\n\n    callback(testPattern(this, basename));\n};\n\n/**\n * @param {string} path\n * @param {JsLoader/FileSystem/FileSystemStrategy} fileSystemStrategy\n * @param {JsLoader/FileSystem/ScanningStrategy~checkFileCallback} callback\n * @return {void}\n */\nPattern.prototype.checkFile = function (path, fileSystemStrategy, callback) {\n    var basename,\n        resolvedPath;\n\n    resolvedPath = p.resolve(path);\n    basename = p.basename(resolvedPath);\n\n    callback(testPattern(this, basename));\n};\n\n/**\n * @abstract\n * @param {mixed} pattern\n * @return {bool}\n */\nPattern.prototype.isNamePatternSupported = function (pattern) {\n    return (\"string\" === typeof pattern) || (pattern instanceof RegExp);\n};\n\nmodule.exports = Pattern;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,OAAO;EAAE;EACTC,gBAAgB,GAAGC,OAAO,CAACC,SAAS,GAAG,sBAAsB,CAAC;EAAE;EAChEC,CAAC,GAAGF,OAAO,CAAC,MAAM,CAAC;EACnBG,WAAW,CAAC,CAAC;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,WAAW,GAAG,SAAAA,CAAUC,uBAAuB,EAAEC,KAAK,EAAE;EACpD,IAAIC,OAAO,GAAGF,uBAAuB,CAACE,OAAO;EAE7C,IAAIA,OAAO,YAAYC,MAAM,EAAE;IAC3B,OAAOD,OAAO,CAACE,IAAI,CAACH,KAAK,CAAC;EAC9B,CAAC,MAAM;IACH,OAAOC,OAAO,KAAKD,KAAK;EAC5B;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACAP,OAAO,GAAG,SAAAA,CAAUQ,OAAO,EAAE;EACzBP,gBAAgB,CAACU,IAAI,CAAC,IAAI,CAAC;EAE3BC,MAAM,CAACC,cAAc,CAAC,IAAI,EAAE,SAAS,EAAE;IAEnC;AACR;AACA;IACQC,GAAG,EAAE,SAAAA,CAAA,EAAY;MACb,OAAON,OAAO;IAClB,CAAC;IAED;AACR;AACA;AACA;AACA;IACQO,GAAG,EAAE,SAAAA,CAAUC,IAAI,EAAE;MACjB,IAAI,CAAC,IAAI,CAACC,sBAAsB,CAACD,IAAI,CAAC,EAAE;QACpC,MAAM,IAAIE,KAAK,CAAC,gDAAgD,CAAC;MACrE;MAEAV,OAAO,GAAGQ,IAAI;IAClB;EAEJ,CAAC,CAAC;EAEF,IAAI,CAACR,OAAO,GAAGA,OAAO;AAC1B,CAAC;AACDR,OAAO,CAACmB,SAAS,GAAGP,MAAM,CAACQ,MAAM,CAACnB,gBAAgB,CAACkB,SAAS,CAAC;;AAE7D;AACA;AACA;AACA;AACA;AACA;AACAnB,OAAO,CAACmB,SAAS,CAACE,cAAc,GAAG,UAAUC,IAAI,EAAEC,kBAAkB,EAAEC,QAAQ,EAAE;EAC7E,IAAIC,QAAQ,EACRC,YAAY;EAEhBA,YAAY,GAAGtB,CAAC,CAACuB,OAAO,CAACL,IAAI,CAAC;EAC9BG,QAAQ,GAAGrB,CAAC,CAACqB,QAAQ,CAACC,YAAY,CAAC;EAEnCF,QAAQ,CAACnB,WAAW,CAAC,IAAI,EAAEoB,QAAQ,CAAC,CAAC;AACzC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACAzB,OAAO,CAACmB,SAAS,CAACS,SAAS,GAAG,UAAUN,IAAI,EAAEC,kBAAkB,EAAEC,QAAQ,EAAE;EACxE,IAAIC,QAAQ,EACRC,YAAY;EAEhBA,YAAY,GAAGtB,CAAC,CAACuB,OAAO,CAACL,IAAI,CAAC;EAC9BG,QAAQ,GAAGrB,CAAC,CAACqB,QAAQ,CAACC,YAAY,CAAC;EAEnCF,QAAQ,CAACnB,WAAW,CAAC,IAAI,EAAEoB,QAAQ,CAAC,CAAC;AACzC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACAzB,OAAO,CAACmB,SAAS,CAACF,sBAAsB,GAAG,UAAUT,OAAO,EAAE;EAC1D,OAAQ,QAAQ,KAAK,OAAOA,OAAO,IAAMA,OAAO,YAAYC,MAAO;AACvE,CAAC;AAEDoB,MAAM,CAACC,OAAO,GAAG9B,OAAO"},"metadata":{},"sourceType":"script","externalDependencies":[]}