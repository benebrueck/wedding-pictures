{"ast":null,"code":"var _jsxFileName = \"/Users/benediktbrueck/Documents/GitHub/wedding-pictures 10.39.07/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState, useRef } from \"react\";\nimport { storage } from \"./firebase\";\nimport { ref, uploadBytes } from \"firebase/storage\";\nimport { Camera } from \"react-camera-pro\";\nimport { v4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Component = () => {\n  _s();\n  function base64ToFile(base64String, fileName) {\n    // Remove the data:image/<file-type>;base64, prefix\n    const base64Data = base64String.replace(/^data:image\\/\\w+;base64,/, '');\n\n    // Convert the base64 string to binary data\n    const binaryData = atob(base64Data);\n\n    // Create an ArrayBuffer from the binary data\n    const buffer = new ArrayBuffer(binaryData.length);\n    const view = new Uint8Array(buffer);\n    for (let i = 0; i < binaryData.length; i++) {\n      view[i] = binaryData.charCodeAt(i);\n    }\n\n    // Create a Blob from the ArrayBuffer\n    const blob = new Blob([buffer], {\n      type: 'image/jpeg'\n    }); // Change the 'image/jpeg' to the appropriate file type\n\n    // Create a File from the Blob\n    const file = new File([blob], fileName, {\n      type: blob.type\n    });\n    return file;\n  }\n  const camera = useRef(null);\n  const [image, setImage] = useState(null);\n  const uploadImage = () => {\n    // if (image==null) return;\n    setImage(camera.current.takePhoto());\n    // Speicherort\n    const imageRef = ref(storage, `test1/${v4()}`);\n    const date = Date();\n    var month = date.getMonth();\n    var day = date.getDay();\n    var year = date.getYear();\n    var string = day + \".\" + month + \".\" + year + \".\" + date.getTime();\n    uploadBytes(imageRef, base64ToFile(image, \"picture\")).then(() => {\n      alert(\"Bild hochgeladen\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Camera, {\n      ref: camera,\n      aspectRatio: 1 / 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: uploadImage,\n      children: \"Take photo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => camera.current.switchCamera(),\n      children: \"Switch Camera\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(Component, \"wth0xvKzmBBgz+Ozzi0o8YzxRlU=\");\n_c = Component;\nexport default Component;\nvar _c;\n$RefreshReg$(_c, \"Component\");","map":{"version":3,"names":["React","useState","useRef","storage","ref","uploadBytes","Camera","v4","jsxDEV","_jsxDEV","Component","_s","base64ToFile","base64String","fileName","base64Data","replace","binaryData","atob","buffer","ArrayBuffer","length","view","Uint8Array","i","charCodeAt","blob","Blob","type","file","File","camera","image","setImage","uploadImage","current","takePhoto","imageRef","date","Date","month","getMonth","day","getDay","year","getYear","string","getTime","then","alert","children","aspectRatio","_jsxFileName","lineNumber","columnNumber","onClick","switchCamera","_c","$RefreshReg$"],"sources":["/Users/benediktbrueck/Documents/GitHub/wedding-pictures 10.39.07/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useState, useRef } from \"react\";\nimport { storage } from \"./firebase\";\nimport { ref, uploadBytes} from \"firebase/storage\";\nimport { Camera } from \"react-camera-pro\";\nimport { v4 } from \"uuid\";\n\nconst Component = () => {\n  function base64ToFile(base64String, fileName) {\n    // Remove the data:image/<file-type>;base64, prefix\n    const base64Data = base64String.replace(/^data:image\\/\\w+;base64,/, '');\n  \n    // Convert the base64 string to binary data\n    const binaryData = atob(base64Data);\n  \n    // Create an ArrayBuffer from the binary data\n    const buffer = new ArrayBuffer(binaryData.length);\n    const view = new Uint8Array(buffer);\n    for (let i = 0; i < binaryData.length; i++) {\n      view[i] = binaryData.charCodeAt(i);\n    }\n  \n    // Create a Blob from the ArrayBuffer\n    const blob = new Blob([buffer], { type: 'image/jpeg' }); // Change the 'image/jpeg' to the appropriate file type\n  \n    // Create a File from the Blob\n    const file = new File([blob], fileName, { type: blob.type });\n  \n    return file;\n  }\n\n  const camera = useRef(null);\n  const [image, setImage] = useState(null);\n\n  const uploadImage = () =>{\n    // if (image==null) return;\n    setImage(camera.current.takePhoto())\n    // Speicherort\n    const imageRef = ref(storage,`test1/${ v4() }`);\n    const date = Date()\n\n    var month = date.getMonth();\n    var day = date.getDay();\n    var year = date.getYear();\n\n    var string = day+\".\"+month+\".\"+year+\".\"+date.getTime()\n\n    uploadBytes(imageRef,base64ToFile(image,\"picture\")).then(()=>{\n      alert(\"Bild hochgeladen\")\n    });\n  }\n\n  return (\n    <div>\n      <Camera ref={camera} aspectRatio={1/1}/>\n      <button onClick={uploadImage}>Take photo</button>\n      <button onClick={()=> camera.current.switchCamera()}>Switch Camera</button>\n    </div>\n  );\n}\n\nexport default Component;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}